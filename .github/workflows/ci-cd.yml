name: CI-CD

on:
  pull_request:
    types:
      - 'edited'
      - 'opened'
      - 'synchronize'
  push:
    branches:
      - 'main'

jobs:
  backend-ci:
    name: "ðŸ”§ Backend CI"
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request' &&
      (github.event.pull_request.base.ref == 'main') &&
      ((github.event_name == 'push' && contains(github.event.head_commit.modified, 'backend/')) ||
       (github.event_name == 'pull_request' && contains(github.event.pull_request.files.*.path, 'backend/')))

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: 'pip'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.2

      - name: Install nox
        run: pip install nox nox-poetry

      - name: Test Backend
        run: cd backend && nox --non-interactive

  # todo add frontend tests
  # frontend-ci:
  #   name: "ðŸ”§ Frontend CI"
  #   runs-on: ubuntu-latest
  #   if: |
  #     github.event_name == 'pull_request' &&
  #     (github.event.pull_request.base.ref == 'main') &&
  #     ((github.event_name == 'push' && contains(github.event.head_commit.modified, 'frontend/')) ||
  #      (github.event_name == 'pull_request' && contains(github.event.pull_request.files.*.path, 'frontend/')))

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'

  #     - uses: pnpm/action-setup@v2
  #       with:
  #         version: 8
  #         run_install: false

  #     - name: Get pnpm store directory
  #       shell: bash
  #       run: |
  #         echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

  #     - uses: actions/cache@v3
  #       name: Setup pnpm cache
  #       with:
  #         path: ${{ env.STORE_PATH }}
  #         key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pnpm-store-

  #     - name: Install dependencies
  #       run: cd frontend && pnpm install

  #     - name: Build
  #       run: cd frontend && pnpm build

  #     - name: Test
  #       run: cd frontend && pnpm test

  # todo: is it needed?
  # backend-cd:
  #   name: "ðŸš€ Backend CD"
  #   needs: [backend-ci]
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - uses: benjlevesque/short-sha@v3.0
  #       id: short-sha
  #       with:
  #         length: 8

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./backend
  #         push: true
  #         tags: |
  #           nomadicsense/moneyplanner:latest
  #           nomadicsense/moneyplanner:${{ steps.short-sha.outputs.sha }}

  #     - name: Deploy to Render
  #       env:
  #         RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
  #       run: |
  #         curl -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_BACKEND_SERVICE_ID }}/deploys" \
  #           -H "Authorization: Bearer $RENDER_API_KEY"
